
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author Manuel
 */
public class life extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form java
     */
    public life() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        automata2d = new javax.swing.JPanel();
        grafica2d = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSpinner5 = new javax.swing.JSpinner();
        jSpinner6 = new javax.swing.JSpinner();
        jComboBox1 = new javax.swing.JComboBox<>();
        textArea1 = new java.awt.TextArea();
        textArea2 = new java.awt.TextArea();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner3 = new javax.swing.JSpinner();
        jSpinner4 = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        automata1d = new javax.swing.JPanel();
        grafica1d = new javax.swing.JPanel();
        jComboBox4 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1920, 1080));
        setMinimumSize(new java.awt.Dimension(1050, 675));
        setPreferredSize(new java.awt.Dimension(1050, 675));
        setSize(new java.awt.Dimension(1050, 675));

        jTabbedPane1.setMaximumSize(new java.awt.Dimension(1920, 800));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(1050, 675));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1050, 675));

        automata2d.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        automata2d.setMaximumSize(new java.awt.Dimension(500, 500));
        automata2d.setMinimumSize(new java.awt.Dimension(500, 500));
        automata2d.setPreferredSize(new java.awt.Dimension(500, 500));
        automata2d.setLayout(new java.awt.BorderLayout());

        grafica2d.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        grafica2d.setMaximumSize(new java.awt.Dimension(500, 500));
        grafica2d.setMinimumSize(new java.awt.Dimension(500, 500));
        grafica2d.setPreferredSize(new java.awt.Dimension(500, 500));
        grafica2d.setLayout(new java.awt.BorderLayout());

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton8.setText("Nuevo Automata");
        jButton8.setMaximumSize(new java.awt.Dimension(135, 66));
        jButton8.setMinimumSize(new java.awt.Dimension(135, 66));
        jButton8.setPreferredSize(new java.awt.Dimension(200, 66));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton9.setText("+Generaciones");
        jButton9.setMaximumSize(new java.awt.Dimension(125, 25));
        jButton9.setMinimumSize(new java.awt.Dimension(125, 25));
        jButton9.setPreferredSize(new java.awt.Dimension(200, 25));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Nº de células :");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel6.setMaximumSize(new java.awt.Dimension(135, 25));
        jLabel6.setMinimumSize(new java.awt.Dimension(135, 25));
        jLabel6.setPreferredSize(new java.awt.Dimension(135, 25));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Nº de generaciones :");
        jLabel7.setToolTipText("");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel7.setMaximumSize(new java.awt.Dimension(135, 25));
        jLabel7.setMinimumSize(new java.awt.Dimension(135, 25));
        jLabel7.setPreferredSize(new java.awt.Dimension(135, 25));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Tipo de frontera");
        jLabel8.setToolTipText("");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel8.setMaximumSize(new java.awt.Dimension(135, 25));
        jLabel8.setMinimumSize(new java.awt.Dimension(135, 25));
        jLabel8.setPreferredSize(new java.awt.Dimension(135, 25));

        jSpinner5.setModel(new javax.swing.SpinnerNumberModel(200, 200, null, 1));
        jSpinner5.setMaximumSize(new java.awt.Dimension(135, 25));
        jSpinner5.setMinimumSize(new java.awt.Dimension(135, 25));
        jSpinner5.setPreferredSize(new java.awt.Dimension(135, 25));

        jSpinner6.setModel(new javax.swing.SpinnerNumberModel(200, 1, null, 1));
        jSpinner6.setToolTipText("");
        jSpinner6.setMaximumSize(new java.awt.Dimension(135, 25));
        jSpinner6.setMinimumSize(new java.awt.Dimension(135, 25));
        jSpinner6.setPreferredSize(new java.awt.Dimension(135, 25));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nula", "Cilíndrica" }));
        jComboBox1.setMaximumSize(new java.awt.Dimension(135, 25));
        jComboBox1.setMinimumSize(new java.awt.Dimension(135, 25));
        jComboBox1.setPreferredSize(new java.awt.Dimension(135, 25));

        textArea1.setEditable(false);
        textArea1.setMaximumSize(new java.awt.Dimension(200, 25));
        textArea1.setMinimumSize(new java.awt.Dimension(200, 25));
        textArea1.setPreferredSize(new java.awt.Dimension(200, 25));

        textArea2.setEditable(false);
        textArea2.setMaximumSize(new java.awt.Dimension(200, 25));
        textArea2.setMinimumSize(new java.awt.Dimension(200, 25));
        textArea2.setName(""); // NOI18N
        textArea2.setPreferredSize(new java.awt.Dimension(200, 25));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Número de células muertas");
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel9.setMaximumSize(new java.awt.Dimension(200, 25));
        jLabel9.setMinimumSize(new java.awt.Dimension(200, 25));
        jLabel9.setPreferredSize(new java.awt.Dimension(200, 25));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Número de células vivas");
        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel10.setMaximumSize(new java.awt.Dimension(200, 25));
        jLabel10.setMinimumSize(new java.awt.Dimension(200, 25));
        jLabel10.setPreferredSize(new java.awt.Dimension(200, 25));

        jButton10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton10.setText("Salir");
        jButton10.setMaximumSize(new java.awt.Dimension(65, 95));
        jButton10.setMinimumSize(new java.awt.Dimension(65, 95));
        jButton10.setPreferredSize(new java.awt.Dimension(65, 95));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(automata2d, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSpinner5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSpinner6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(24, 24, 24)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(textArea1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textArea2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(grafica2d, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(grafica2d, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(automata2d, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textArea1, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                            .addComponent(textArea2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jSpinner5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(14, 14, 14)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Automata 2-D", jPanel2);

        jPanel1.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jPanel1.setMinimumSize(new java.awt.Dimension(1050, 650));
        jPanel1.setName(""); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(1050, 650));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setMaximumSize(new java.awt.Dimension(135, 25));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(135, 25));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(135, 25));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextArea1.setRows(1);
        jTextArea1.setMaximumSize(new java.awt.Dimension(135, 25));
        jTextArea1.setMinimumSize(new java.awt.Dimension(135, 25));
        jTextArea1.setPreferredSize(new java.awt.Dimension(135, 25));
        jScrollPane1.setViewportView(jTextArea1);

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jSpinner1.setMaximumSize(new java.awt.Dimension(135, 25));
        jSpinner1.setMinimumSize(new java.awt.Dimension(135, 25));
        jSpinner1.setPreferredSize(new java.awt.Dimension(135, 25));

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(1000, 1, null, 1));
        jSpinner2.setMaximumSize(new java.awt.Dimension(135, 25));
        jSpinner2.setMinimumSize(new java.awt.Dimension(135, 25));
        jSpinner2.setPreferredSize(new java.awt.Dimension(135, 25));

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(1000, 1, null, 1));
        jSpinner3.setMaximumSize(new java.awt.Dimension(135, 25));
        jSpinner3.setMinimumSize(new java.awt.Dimension(135, 25));
        jSpinner3.setPreferredSize(new java.awt.Dimension(135, 25));

        jSpinner4.setModel(new javax.swing.SpinnerNumberModel(30, 0, 255, 1));
        jSpinner4.setMaximumSize(new java.awt.Dimension(135, 25));
        jSpinner4.setMinimumSize(new java.awt.Dimension(135, 25));
        jSpinner4.setPreferredSize(new java.awt.Dimension(135, 25));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setText("Nuevo Automata");
        jButton1.setMaximumSize(new java.awt.Dimension(200, 66));
        jButton1.setMinimumSize(new java.awt.Dimension(200, 66));
        jButton1.setPreferredSize(new java.awt.Dimension(200, 66));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton3.setText("Entropía Temporal");
        jButton3.setActionCommand("");
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setMaximumSize(new java.awt.Dimension(135, 25));
        jButton3.setMinimumSize(new java.awt.Dimension(135, 25));
        jButton3.setPreferredSize(new java.awt.Dimension(135, 25));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton4.setText("Entropía Espacial");
        jButton4.setMaximumSize(new java.awt.Dimension(125, 25));
        jButton4.setMinimumSize(new java.awt.Dimension(125, 25));
        jButton4.setPreferredSize(new java.awt.Dimension(135, 25));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton5.setText("Población");
        jButton5.setMaximumSize(new java.awt.Dimension(135, 25));
        jButton5.setMinimumSize(new java.awt.Dimension(135, 25));
        jButton5.setPreferredSize(new java.awt.Dimension(135, 25));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton6.setText("Distancia Hamming");
        jButton6.setMaximumSize(new java.awt.Dimension(135, 25));
        jButton6.setMinimumSize(new java.awt.Dimension(135, 25));
        jButton6.setPreferredSize(new java.awt.Dimension(135, 25));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton7.setText("Salir");
        jButton7.setMaximumSize(new java.awt.Dimension(65, 95));
        jButton7.setMinimumSize(new java.awt.Dimension(65, 95));
        jButton7.setPreferredSize(new java.awt.Dimension(65, 95));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ID de la célula :");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setMaximumSize(new java.awt.Dimension(135, 25));
        jLabel1.setMinimumSize(new java.awt.Dimension(135, 25));
        jLabel1.setPreferredSize(new java.awt.Dimension(135, 25));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Entropía de la célula :");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel2.setMaximumSize(new java.awt.Dimension(135, 25));
        jLabel2.setMinimumSize(new java.awt.Dimension(135, 25));
        jLabel2.setPreferredSize(new java.awt.Dimension(135, 25));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Nº de células :");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel3.setMaximumSize(new java.awt.Dimension(135, 25));
        jLabel3.setMinimumSize(new java.awt.Dimension(135, 25));
        jLabel3.setPreferredSize(new java.awt.Dimension(135, 25));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Nº de generaciones :");
        jLabel4.setToolTipText("");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel4.setMaximumSize(new java.awt.Dimension(135, 25));
        jLabel4.setMinimumSize(new java.awt.Dimension(135, 25));
        jLabel4.setPreferredSize(new java.awt.Dimension(135, 25));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Regla");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel5.setMaximumSize(new java.awt.Dimension(135, 25));
        jLabel5.setMinimumSize(new java.awt.Dimension(135, 25));
        jLabel5.setPreferredSize(new java.awt.Dimension(135, 25));

        automata1d.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        automata1d.setMaximumSize(new java.awt.Dimension(500, 500));
        automata1d.setMinimumSize(new java.awt.Dimension(500, 500));
        automata1d.setPreferredSize(new java.awt.Dimension(500, 500));
        automata1d.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        grafica1d.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        grafica1d.setMaximumSize(new java.awt.Dimension(500, 500));
        grafica1d.setMinimumSize(new java.awt.Dimension(500, 500));
        grafica1d.setPreferredSize(new java.awt.Dimension(500, 500));
        grafica1d.setLayout(new java.awt.BorderLayout());

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aleatorio", "Regla" }));
        jComboBox4.setMaximumSize(new java.awt.Dimension(200, 25));
        jComboBox4.setMinimumSize(new java.awt.Dimension(200, 25));
        jComboBox4.setPreferredSize(new java.awt.Dimension(200, 25));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(automata1d, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinner2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jSpinner3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jSpinner4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(10, 10, 10)
                                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinner1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(10, 10, 10)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(10, 10, 10)
                        .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(grafica1d, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(automata1d, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(grafica1d, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jSpinner2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jSpinner1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jSpinner4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Automata 1-D", jPanel1);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        //Nuevo automata 2D
        automata2 = new automatacelular2d( (int) jSpinner5.getValue() );
        if("Nula"==jComboBox1.getSelectedItem().toString())       { automata2.setfrontera(true); }
        if("Cilíndrica"==jComboBox1.getSelectedItem().toString())  { automata2.setfrontera(false); }
        vivas2d = new XYSeries("Células vivas 2D.");
        muertas2d = new XYSeries("Células muertas 2D.");
        generaciones=0;

        dibujoaux2d=automata2.actual();

        pintarautomata2d( automata2d.getGraphics() , automata2d );
        textArea1.setText( Integer.toString( automata2.getcelulasvivas() )  );
        textArea2.setText( Integer.toString( automata2.getcelulasmuertas() )  );               
        datos2d = new XYSeriesCollection();
        
        for(int i = 0 ; i < (Integer) jSpinner6.getValue() ; i++ ){//(Integer) jSpinner1.getValue()
            automata2.nextGen();
            textArea1.setText(Integer.toString( automata2.getcelulasvivas()   ));
            textArea2.setText( Integer.toString( automata2.getcelulasmuertas() ));
            vivas2d.add( generaciones, automata2.getcelulasvivas() );
            muertas2d.add( generaciones,automata2.getcelulasmuertas() );
            dibujoaux2d=automata2.actual();
            pintarautomata2d( automata2d.getGraphics() , automata2d );
            generaciones++;
        }
        datos2d.addSeries(vivas2d); 
        datos2d.addSeries(muertas2d);
        poblacion2d = ChartFactory.createXYLineChart( "Poblacion" , "Generación" , "Nº de celulas", datos2d );
        ChartPanel grafica_poblacion= new ChartPanel(poblacion2d);
        grafica_poblacion.setDomainZoomable(true);
        grafica2d.removeAll();
        grafica2d.updateUI();
        grafica2d.setLayout(new BorderLayout());
        grafica2d.add(grafica_poblacion);        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        //+Generaciones 
        for(int i = 0 ; i < (Integer) jSpinner6.getValue() ; i++ ){//(Integer) jSpinner1.getValue()
            automata2.nextGen();
            textArea1.setText(Integer.toString( automata2.getcelulasvivas()   ));
            textArea2.setText( Integer.toString( automata2.getcelulasmuertas() ));
            vivas2d.add( generaciones, automata2.getcelulasvivas() );
            muertas2d.add( generaciones,automata2.getcelulasmuertas() );
            dibujoaux2d=automata2.actual();
            pintarautomata2d( automata2d.getGraphics() , automata2d );
            generaciones++;
        }
        datos2d = new XYSeriesCollection();
        datos2d.addSeries(vivas2d); 
        datos2d.addSeries(muertas2d);
        poblacion2d = ChartFactory.createXYLineChart( "Poblacion" , "Generación" , "Nº de celulas", datos2d );
        ChartPanel grafica_poblacion= new ChartPanel(poblacion2d);
        grafica_poblacion.setDomainZoomable(true);
        grafica2d.removeAll();
        grafica2d.updateUI();
        grafica2d.setLayout(new BorderLayout());
        grafica2d.add(grafica_poblacion);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Nuevo automata 1D
        int ncelulas = (int) jSpinner2.getValue();
        int generaciones = (int) jSpinner3.getValue();
        int regla = (int) jSpinner4.getValue() ;
        if("Regla"==jComboBox4.getSelectedItem().toString()){ 
            automata1 = new ca1DSimulator( regla );
            automata1.caComputation( 250 );
        }
        else if("Aleatorio"==jComboBox4.getSelectedItem().toString()){ 
            automata1 = new ca1DSimulator( ncelulas , generaciones );
            automata1.setregla( regla );
            automata1.caComputation( generaciones );
        }
        dibujoaux1d=automata1.getautomata();
        pintarautomata1d( automata1d.getGraphics() , automata1d );
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        double[] humming  = ca1DSimulator.distancia_humming();
        //Creamos los datos
        distancias_hamming1d = new XYSeries("Distancia de Hamming .");
        for (int i = 0; i < humming.length ; i++){ distancias_hamming1d.add( i,humming[i] ); }
        //Añadimos los datos
        datos1d = new XYSeriesCollection();
        datos1d.addSeries(distancias_hamming1d);
        // Generamos el graficos
        dist_humming = ChartFactory.createXYLineChart(
            "Distancia de Humming",     // Gráfica
            "Generación",               // etiqueta eje x
            "Distancia con Padres",     // etiqueta eje y
            datos1d                      // Conjunto de datos
            );

        ChartPanel ventana_humming = new ChartPanel(dist_humming);
        ventana_humming.setDomainZoomable(true);
        grafica1d.removeAll();
        grafica1d.updateUI();
        grafica1d.setLayout(new BorderLayout());
        grafica1d.add(ventana_humming, BorderLayout.CENTER);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        double[] entropia = ca1DSimulator.entropia_automata();
        //Creamos los datos
        entropias_automata1d = new XYSeries("Entropia por generación .");
        for (int i = 0; i < entropia.length ; i++){ entropias_automata1d.add( i,entropia[i] ); }
        //Añadimos los datos
        datos1d = new XYSeriesCollection();
        datos1d.addSeries(entropias_automata1d);
        // Generamos el graficos
        entropia_automata = ChartFactory.createXYLineChart(
            "Entropia por generaciones",// Gráfica
            "Generación",               // etiqueta eje x
            "Nivel de Entropia",        // etiqueta eje y
            datos1d                      // Conjunto de datos
            );

        ChartPanel ventana_entropia = new ChartPanel(entropia_automata);
        ventana_entropia.setDomainZoomable(true);
        grafica1d.removeAll(); 
        grafica1d.updateUI();
        grafica1d.setLayout(new BorderLayout());
        grafica1d.add(ventana_entropia, BorderLayout.CENTER);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int celula = (Integer) jSpinner1.getValue();
        if(celula >= automata1.getncelulas() ){ 
            jTextArea1.setText("No existe la celula ...");
        }else{
            double entropia= ca1DSimulator.entropia_celula(celula);
            jTextArea1.setText(Double.toString(entropia));        
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        ca1DSimulator.poblacion();
        int[][] pob = ca1DSimulator.getpoblacion();
        XYSeries vivas = new XYSeries("Células vivas .");
        XYSeries muertas = new XYSeries("Células muertas .");
        XYSeriesCollection datospoblacion = new XYSeriesCollection();
        for (int i = 0; i < pob[0].length ; i++){
            vivas.add(   i,pob[0][i] );
            muertas.add( i,pob[1][i] );
        }
        datospoblacion.addSeries(vivas);
        datospoblacion.addSeries(muertas);
        JFreeChart poblacion = ChartFactory.createXYLineChart(
            "Población",    // Gráfica
            "Generación",   // etiqueta eje x
            "Número",       // etiqueta eje y
            datospoblacion  // Conjunto de datos
            );
        ChartPanel ventana_poblacion = new ChartPanel(poblacion);
        ventana_poblacion.setDomainZoomable(true);
        grafica1d.removeAll(); 
        grafica1d.updateUI();
        grafica1d.setLayout(new BorderLayout());
        grafica1d.add(ventana_poblacion, BorderLayout.CENTER);
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(life.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(life.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(life.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(life.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new life().setVisible(true);
            }
        });
    }

    /****************************************/
    /********Métodos Automata 1D*************/
    /****************************************/
    public life(int liminf,int limsup,int th){
        if(thilo==0){ thilo=th; linf1d=liminf; lsup1d=limsup; }
        if(thilo==1){ thilo=th; linf2d=liminf; lsup2d=limsup; }
    }
    
    private void pintarautomata1d( Graphics g , JPanel panel ){
        dibujoaux1d = automata1.getautomata();
        ac1d = panel.createImage( dibujoaux1d.length ,dibujoaux1d[0].length );
        //long inicCronom = System.currentTimeMillis();//Cronometro
        
        //Variables calculo paralelo
        int nNuc= Runtime.getRuntime().availableProcessors();
        ExecutorService ejecutor = Executors.newFixedThreadPool(nNuc);
        int inc   = dibujoaux1d.length / nNuc;
        //Creación de hilos
        life conway[] = new life[nNuc];            
        for(int i=0; i < nNuc-1 ; i++ ){ conway[i]=new life( i*inc , (i+1)*inc , 0); }            
        conway[nNuc-1]=new life( (nNuc-1)*inc , dibujoaux1d.length , 0);
        //Ejecución
        for(int k=0;k < nNuc ; k++ ){ ejecutor.execute(conway[k]); }
        ejecutor.shutdown();
        while( !ejecutor.isTerminated() ){}
        
        g.drawImage(ac1d, 0, 0, panel.getWidth(), panel.getHeight(), panel);
        
    }
    private void pintarautomata2d( Graphics g , JPanel panel ){
        //Pruebas realizadas apuntan a que para un i7 de 4nucleos/8 hilos 
        //el tiempo de dibujado paralelo obtiene un speedup de 2.5~3 respecto al secuencial
        //incluyendo el tiempo de preparación de los hilos .
        
        int[][] matrix = automata2.actual();
        ac2d = panel.createImage( matrix.length , matrix.length );
        
        //long inicCronom = System.currentTimeMillis();//Cronometro
        
        //Variables calculo paralelo
        int nNuc= Runtime.getRuntime().availableProcessors();
        ExecutorService ejecutor = Executors.newFixedThreadPool(nNuc);
        int inc   = matrix.length / nNuc;
        //Creación de hilos
        life conway[] = new life[nNuc];            
        for(int i=0; i < nNuc-1 ; i++ ){ conway[i]=new life( i*inc , (i+1)*inc , 1); }            
        conway[nNuc-1]=new life( (nNuc-1)*inc , matrix.length , 1);
        //Ejecución
        for(int k=0;k < nNuc ; k++ ){ ejecutor.execute(conway[k]); }
        ejecutor.shutdown();
        while( !ejecutor.isTerminated() ){}
        
        g.drawImage(ac2d, 0, 0, panel.getWidth(), panel.getHeight(), panel);
        
        //long finCronom = System.currentTimeMillis();
        //System.out.println("Acabando trabajo tras " + (finCronom - inicCronom) + " milisegundos");
    
    }
    
    public void run(){
        if(thilo==0){
            Graphics g1d = ac1d.getGraphics();
            for(int i=linf1d; i<lsup1d;i++){
                for(int j = 0 ; j < dibujoaux1d[0].length ; j++){
                    if(dibujoaux1d[i][j]==1){ g1d.setColor(Color.GREEN); }
                    else                    { g1d.setColor(Color.BLACK); }
                    g1d.drawRect(j, i, 1, 1);
                }
            }
        }else if(thilo==1){
            Graphics g2d = ac2d.getGraphics();
            for(int i=linf2d; i<lsup2d;i++){
                for(int j = 0 ; j < dibujoaux2d.length ; j++){
                    if(dibujoaux2d[i][j]==1){ g2d.setColor(Color.GREEN); }
                    else                    { g2d.setColor(Color.BLACK); }
                    g2d.drawRect(j, i, 1, 1);
                }
            }
        }
        
        
    }
    /****************************************/
    /****************************************/
    /****************************************/
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel automata1d;
    private javax.swing.JPanel automata2d;
    private javax.swing.JPanel grafica1d;
    private javax.swing.JPanel grafica2d;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JSpinner jSpinner5;
    private javax.swing.JSpinner jSpinner6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private java.awt.TextArea textArea1;
    private java.awt.TextArea textArea2;
    // End of variables declaration//GEN-END:variables
    private int thilo;
    /****************************************/
    /********Variables Automata 1D***********/
    /****************************************/   
    private static ca1DSimulator automata1;
    private static Image ac1d;
    private static int[][] dibujoaux1d;
    private int linf1d;
    private int lsup1d;
    private JFreeChart entropia_automata;
    private JFreeChart dist_humming;
    private static XYSeries distancias_hamming1d;
    private static XYSeries entropias_automata1d;
    private static XYSeriesCollection datos1d;
    
    /****************************************/
    /********Variables Automata 2D***********/
    /****************************************/
    private static automatacelular2d automata2;
    private static JFreeChart poblacion2d;
    private static XYSeries vivas2d;
    private static XYSeries muertas2d;
    private static XYSeriesCollection datos2d;
    private static int generaciones;
    private static Image ac2d;
    private static int[][] dibujoaux2d;
    private int linf2d;
    private int lsup2d;
    /****************************************/
    /****************************************/
    /****************************************/
    
    
    
}
